openapi: 3.0.0
info:
  title: 06-Jobs-API-Production
  version: 1.0.0
servers:
  - url: https://jobs-api-tetyana.onrender.com/api/v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  /jobs/{id}}:
    delete:
      tags:
        - Jobs
      summary: Production Delete Job
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /jobs/{id}:
    patch:
      tags:
        - Jobs
      summary: Production Update Job
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                company: amazon_peter_production
                position: manager_peter_production
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Jobs
      summary: Production Get Single Job by User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /jobs:
    post:
      tags:
        - Jobs
      summary: Production Create Jobs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                company: amazon_peter_production
                position: front-end-dev_peter_production
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Jobs
      summary: Production All Jobs by User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/register:
    post:
      tags:
        - Auth
      summary: Production Register User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: peter_production
                email: peter_production@example.com
                password: secret
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/login:
    post:
      tags:
        - Auth
      summary: Production Login User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: peter@example.com
                password: secret
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
